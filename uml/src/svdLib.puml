@startuml SvdDiagram

package svdLib {

    abstract class SvdEngine{
        
        {abstract} # init(Matrix*)
        {abstract} # host_vector<Matrix*> getOutputMatrices()
        {abstract} # device_vector<Matrix*> getDeviceOutputMatrices()
        {abstract} # work( )
        {static} + SvdEngine* factory(SvdEngineType)
    }

    abstract class SvdCudaEngine{

        # float* deviceA
        # device_vector<float>* deviceU
        # device_vector<float>* deviceS
        # device_vector<float>* deviceVT
        # device_vector<float>* deviceWork
        # int lWork
        # int less
        # cusolverEigMode_t jobZ
        # int* deviceInfo
        {static} # cusolverDnHandle_t* cusolverH
        
        

        # init(Matrix*)
        # host_vector<Matrix*> getOutputMatrices()
        # device_vector<Matrix*> getDeviceOutputMatrices()
        {static} + finalize()
    }

    enum SvdEngineType{
        CUSOLVER_GESVD
        CUSOLVER_GESVDJ
        CUSOLVER_GESVDA_BATCH
    }

    class CuSolverGeSvd{

        - float* deviceRWork

        # init(Matrix*)
        # work( )
        # host_vector<Matrix*> getOutputMatrices()
        # device_vector<Matrix*> getDeviceOutputMatrices()
    }

    class CuSolverGeSvdj{

        - float tolerance
        - int maxSweeps
        - int econ
        - gesvdjInfo_t gesvdjParams

        - printStat()
        # init(Matrix*)
        # work( )
        # host_vector<Matrix*> getOutputMatrices()
        # device_vector<Matrix*> getDeviceOutputMatrices()
    }

    class CuSolverGeSvdaBatch{

        # init(Matrix*)
        # work( )
        # host_vector<Matrix*> getOutputMatrices()
        # device_vector<Matrix*> getDeviceOutputMatrices()
    }

    class SvdContainer{

        + SvdContainer(SvdEngine*)
        + setMatrix(Matrix*)
        + host_vector<Matrix*> getOutputMatrices()
        + device_vector<Matrix*> getDeviceOutputMatrices()
        + TimeElapsed* getTimeElapsed()
    }

    'SvdContainer -->  "*" Matrix 
    SvdContainer --> "1" SvdEngine
    'TimeElapsed "1" <- SvdContainer
    'SvdEngine -> "*" Matrix
    SvdEngine -> "1" SvdEngineType
    SvdEngine <|-- SvdCudaEngine : extends
    SvdCudaEngine <|-- CuSolverGeSvdj : extends
    SvdCudaEngine <|-- CuSolverGeSvdaBatch : extends
    SvdCudaEngine <|-- CuSolverGeSvd : extends

    hide SvdEngineType methods
    hide SvdContainer fields
    hide SvdEngine fields
    hide CuSolverGeSvdaBatch fields
}

package baseUilityLib{
    class Matrix
    class TimeElapsed

    hide Matrix fields
    hide Matrix methods

    hide TimeElapsed fields
    hide TimeElapsed methods
}

SvdContainer --> "*" TimeElapsed
SvdContainer --> "*" Matrix
SvdEngine --> "*" Matrix

@enduml