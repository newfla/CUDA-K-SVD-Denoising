@startuml MatUtilityDiagram

package matutilityLib{

    enum MatrixOpsType{
            CUBLAS_MULT
            CUBLAS_ADD
            CUBLAS_OMP
    }

    abstract class MatrixOps{

        # float alfa
        # float beta

        {abstract} # init()
        {abstract} # finalize()
        {abstract} + work(Matrix* a , Matrix* b)
        {abstract} + TimeElapsed* getTimeElapsed()
        + setCoff(float, float)
        {static} + MatrixMult* factory(MatrixOpsType)
    }

    class CuBlasMatrixOps{
        {static} # cuBlasHandle_t* handle
        # cublasOperation_t op1
        # cublasOperation_t op2
        # device_vector<float>* cVector

        + setOps(cublasOperation_t, cublasOperation_t)
        {static} + finalize()
        
    }

    class CuBlasMatrixMult{
        - cublasHandle_t handle
        - cublasOperation_t op1
        - cublasOperation_t op2
        - device_vector<float>* cVector

        # init()
        # finalize()
        + work(Matrix* a , Matrix* b)
        + work(Matrix*, int , device_ptr<float>)
        + setOps(cublasOperation_t, cublasOperation_t) 
    }

    class CuBlasMatrixAdd{
        # init()
        # finalize()
        + work(Matrix* a , Matrix* b)
    }

    class CuBlasMatrixOmp{
        + int maxIters
        - int blocks
        - device_vector<float>* proj 
        - device_vector<float>* projAbs
        - device_vector<float>* tempVec
        - device_vector<int>* maxs
        - device_vector<float>* alfaBeta
        - device_vector<int>* chosenAtomIdxList
        - device_vector<float>* chosenAtomList
        - device_vector<float>* tempMatMult
        - device_vector<float>* pseudoInverse
        - device_vector<float>* weightList
        # init()
        # finalize()
        + work(Matrix* a , Matrix* b)
    }

    MatrixOps -> "1" MatrixOpsType
    CuBlasMatrixOps --|> MatrixOps : extends
    CuBlasMatrixMult --|> CuBlasMatrixOps : extends
    CuBlasMatrixAdd --|> CuBlasMatrixOps : extends
    CuBlasMatrixOmp --|> CuBlasMatrixOps : extends

    hide MatrixOpsType methods 
    hide CuBlasMatrixAdd fields
}

package baseUtilityLib{
    class Matrix
    class TimeElapsed

    hide Matrix fields
    hide Matrix methods
    hide TimeElapsed fields
    hide TimeElapsed methods
}

MatrixOps --> "*" Matrix
MatrixOps --> "1" TimeElapsed

@enduml